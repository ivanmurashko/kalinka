/**
   @file testdefines.h
   @brief This file is part of Kalinka mediaserver.
   @author ipp <ivan.murashko@gmail.com>

   Copyright (c) 2007-2012 Kalinka Team

   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
   "Software"), to deal in the Software without restriction, including
   without limitation the rights to use, copy, modify, merge, publish,
   distribute, sublicense, and/or sell copies of the Software, and to
   permit persons to whom the Software is furnished to do so, subject to
   the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
   SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

   CHANGE HISTORY

   @date
   - 2009/03/06 created by ipp (Ivan Murashko)
   - 2009/08/02 header was changed by header.py script
   - 2010/01/06 header was changed by header.py script
   - 2011/01/01 header was changed by header.py script
   - 2012/02/03 header was changed by header.py script
*/

#ifndef KLKDVB_TESTDEFINES_H
#define KLKDVB_TESTDEFINES_H

#include <sys/types.h>

#include <string>

namespace klk
{
    namespace dvb
    {
        /**
           Test card name (card1)
        */
        const std::string TESTCARD1("@TESTDVB_CARD1_NAME@");

        /**
           Test card name (card2)
        */
        const std::string TESTCARD2("@TESTDVB_CARD2_NAME@");

        /**
           Test card name (card3)
        */
        const std::string TESTCARD3("@TESTDVB_CARD3_NAME@");

        /**
           Channel 11 name
        */
        const std::string TEST_CHANNEL11_NAME("@TESTDVB_CHANNEL11_NAME@");

        /**
           Channel 11 id
        */
        const std::string TEST_CHANNEL11_ID("@TESTDVB_CHANNEL11_ID@");

        /**
           Channel 12 name
        */
        const std::string TEST_CHANNEL12_NAME("@TESTDVB_CHANNEL12_NAME@");

        /**
           Channel 12 id
        */
        const std::string TEST_CHANNEL12_ID("@TESTDVB_CHANNEL12_ID@");

        /**
           Channel 2 name
        */
        const std::string TEST_CHANNEL2_NAME("@TESTDVB_CHANNEL2_NAME@");

        /**
           Channel 2 id
        */
        const std::string TEST_CHANNEL2_ID("@TESTDVB_CHANNEL2_ID@");

        /**
           Channel 3 name
        */
        const std::string TEST_CHANNEL3_NAME("@TESTDVB_CHANNEL3_NAME@");

        /**
           Channel 3 id
        */
        const std::string TEST_CHANNEL3_ID("@TESTDVB_CHANNEL3_ID@");

        /**
           Frequency for first channels
        */
        const int TEST_FREQUENCY1(@TESTDVB_FREQUENCY1@);

        /**
           Frequency for second channel
        */
        const int TEST_FREQUENCY2(@TESTDVB_FREQUENCY2@);

        /**
           Frequency for third channel
        */
        const int TEST_FREQUENCY3(@TESTDVB_FREQUENCY3@);

        /**
           Test source for streaming - valid
        */
        const std::string TESTSOURCESTREAM("@DVB_SIGNAL_SOURCE_TERRESTRIAL@");

        /**
           Test source for card 3 (initial value)
        */
        const std::string TESTSOURCEINITIAL("@DVB_SIGNAL_SOURCE_NAME_SAT@");

        /**
           Test source for card 3 (final value)
        */
        const std::string TESTSOURCEFIN("@DVB_SIGNAL_SOURCE_NAME_HOTBIRD_13E@");
    }
}


#endif //KLKDVB_TESTDEFINES_H
