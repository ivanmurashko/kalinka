/**
   @file defines.h
   @brief This file is part of Kalinka mediaserver.
   @author ipp <ivan.murashko@gmail.com>

   Copyright (c) 2007-2012 Kalinka Team

   Permission is hereby granted, free of charge, to any person obtaining
   a copy of this software and associated documentation files (the
   "Software"), to deal in the Software without restriction, including
   without limitation the rights to use, copy, modify, merge, publish,
   distribute, sublicense, and/or sell copies of the Software, and to
   permit persons to whom the Software is furnished to do so, subject to
   the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
   IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
   CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
   TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
   SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

   CHANGE HISTORY

   @date
   - 2008/11/07 created by ipp (Ivan Murashko)
   - 2009/08/02 header was changed by header.py script
   - 2010/01/06 header was changed by header.py script
   - 2011/01/01 header was changed by header.py script
   - 2012/02/03 header was changed by header.py script
*/

#ifndef KLKNET_DEFINES_H
#define KLKNET_DEFINES_H

#include <string>

namespace klk
{
    namespace net
    {
        /** @defgroup grNetModule Network module

            Network module

            @ingroup grModule
            @{
        */

        /**
           Module ID
        */
        const std::string MODID("@MODULE_NET_ID@");

        /**
           Module's name
        */
        const std::string MODNAME("@MODULE_NET_NAME@");

        /**
           Default network trunk
        */
        const std::string DEFAULT_TRUNK("@NETWORK_TRUNK_DEFAULT@");

        /**
           Protocol UDP
        */
        const std::string UDP("@NETWORK_PROTO_UDP@");

        /**
           Protocol UDP name
        */
        const std::string UDP_NAME("@NETWORK_PROTO_UDP_NAME@");

        /**
           Protocol TCP/IP
        */
        const std::string TCPIP("@NETWORK_PROTO_TCPIP@");

        /**
           Protocol TCP/IP name
        */
        const std::string TCPIP_NAME("@NETWORK_PROTO_TCPIP_NAME@");

        /**
           Lock update interval
        */
        const int LOCK_UPDATE_INTERVAL(@NETWORK_LOCK_INTERVAL@);

        /// Update db sync message
        const std::string UPDATEDB_MESSAGE = "@NETWORK_DBUPDATE_MESSAGE@";

        /** @} */
    }
}

#endif //KLKNET_DEFINES_H
